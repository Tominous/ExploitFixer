package dev._2lstudios.exploitfixer.listener;

import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.material.Dispenser;
import org.bukkit.material.MaterialData;

import dev._2lstudios.exploitfixer.managers.ModuleManager;
import dev._2lstudios.exploitfixer.modules.EventsModule;
import dev._2lstudios.exploitfixer.modules.NotificationsModule;

public class BlockDispenseListener implements Listener {
    private NotificationsModule notificationsModule;
    private EventsModule eventsModule;

    BlockDispenseListener(ModuleManager moduleManager) {
        this.notificationsModule = moduleManager.getNotificationsModule();
        this.eventsModule = moduleManager.getEventsModule();
    }

    // This listener only runs in 1.12 servers otherwise exception will be thrown
    @EventHandler(priority = EventPriority.LOW, ignoreCancelled = true)
    public void onBlockDispense(BlockDispenseEvent event) {
        if (eventsModule.isDispenserCrash()) {
            Block block = event.getBlock();
            Location location = block.getLocation();
            World world = location.getWorld();

            if (world != null) {
                int maxHeight = world.getMaxHeight() - 1;
                MaterialData materialData = block.getState().getData();

                if (materialData instanceof Dispenser) {
                    Dispenser dispenser = (Dispenser) materialData;
                    BlockFace face = dispenser.getFacing();
                    double y = location.getY();

                    // Return if it's not a shulker
                    if (!event.getItem().getType().toString().contains("SHULKER")) {
                        return;
                    }

                    if ((y >= maxHeight && face == BlockFace.UP
                            || y <= 1 && face == BlockFace.DOWN)) {
                        event.setCancelled(true);
                        notificationsModule
                                .debug("[Events] A dispenser tried to drop objects from invalid locations.");
                    }
                }
            }
        }
    }
}
