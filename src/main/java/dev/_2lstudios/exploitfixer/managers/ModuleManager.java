package dev._2lstudios.exploitfixer.managers;

import java.io.File;
import java.util.logging.Logger;

import org.bukkit.Server;
import org.bukkit.plugin.Plugin;

import dev._2lstudios.exploitfixer.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.modules.EventsModule;
import dev._2lstudios.exploitfixer.modules.ItemsFixModule;
import dev._2lstudios.exploitfixer.configuration.IConfiguration;
import dev._2lstudios.exploitfixer.modules.CommandsModule;
import dev._2lstudios.exploitfixer.modules.ConnectionModule;
import dev._2lstudios.exploitfixer.modules.MessagesModule;
import dev._2lstudios.exploitfixer.modules.PacketsModule;
import dev._2lstudios.exploitfixer.utils.IConfigurationUtil;

public class ModuleManager {
	private Plugin plugin;
	private CommandsModule commandsModule;
	private ConnectionModule connectionModule;
	private EventsModule eventsModule;
	private ItemsFixModule itemsFixModule;
	private MessagesModule messagesModule;
	private NotificationsModule notificationsModule;
	private PacketsModule packetsModule;
	private ExploitPlayerManager exploitPlayerManager;

	public ModuleManager(IConfigurationUtil configurationUtil, Plugin plugin) {
		this.plugin = plugin;

		Server server = plugin.getServer();
		Logger logger = plugin.getLogger();

		this.commandsModule = new CommandsModule();
		this.connectionModule = new ConnectionModule();
		this.eventsModule = new EventsModule();
		this.itemsFixModule = new ItemsFixModule(plugin);
		this.messagesModule = new MessagesModule(configurationUtil, logger, plugin.getDescription().getVersion());
		this.notificationsModule = new NotificationsModule(server, logger);
		this.packetsModule = new PacketsModule();
		this.exploitPlayerManager = new ExploitPlayerManager(plugin, server, this);
	}

	public void reload(IConfiguration configYml) {
		try {
			File localeFolder = new File(plugin.getDataFolder() + "/locales/");

			localeFolder.mkdirs();

			this.commandsModule.reload(configYml);
			this.connectionModule.reload(configYml);
			this.eventsModule.reload(configYml);
			this.itemsFixModule.reload(configYml);
			this.messagesModule.reload(configYml, localeFolder);
			this.notificationsModule.reload(configYml);
			this.packetsModule.reload(configYml);
			this.exploitPlayerManager.reload();
		} catch (NullPointerException exception) {
			NullPointerException newException = new NullPointerException(
					"Your ExploitFixer configuration is wrong, please reset it or the plugin wont work!");

			newException.setStackTrace(exception.getStackTrace());

			throw newException;
		}
	}

	public CommandsModule getCommandsModule() {
		return commandsModule;
	}

	public ConnectionModule getConnectionModule() {
		return connectionModule;
	}

	public EventsModule getEventsModule() {
		return eventsModule;
	}

	public ItemsFixModule getItemsFixModule() {
		return itemsFixModule;
	}

	public MessagesModule getMessagesModule() {
		return messagesModule;
	}

	public NotificationsModule getNotificationsModule() {
		return notificationsModule;
	}

	public ExploitPlayerManager getExploitPlayerManager() {
		return exploitPlayerManager;
	}

	public PacketsModule getPacketsModule() {
		return packetsModule;
	}
}
