package dev._2lstudios.exploitfixer.configuration;

import java.util.Collection;
import java.util.HashSet;

import org.bukkit.configuration.ConfigurationSection;

public class BukkitConfiguration implements IConfiguration {
    private ConfigurationSection configuration;

    public BukkitConfiguration(ConfigurationSection configuration) {
        this.configuration = configuration;
    }

    @Override
    public IConfiguration getSection(String path) {
        Object section = configuration.get(path);

        if (section instanceof ConfigurationSection) {
            return new BukkitConfiguration((ConfigurationSection) section);
        } else {
            return null;
        }
    }

    @Override
    public Collection<String> getKeys() {
        return configuration.getKeys(false);
    }

    @Override
    public Collection<String> getStringList(String path) {
        if (configuration.contains(path)) {
            return new HashSet<>(configuration.getStringList(path));
        } else {
            return null;
        }
    }

    @Override
    public String getString(String path) {
        return configuration.getString(path);
    }

    @Override
    public String getString(String path, String def) {
        if (contains(path)) {
            return getString(path);
        } else {
            return def;
        }
    }

    @Override
    public double getDouble(String path) {
        return configuration.getDouble(path);
    }

    @Override
    public long getLong(String path) {
        return configuration.getLong(path);
    }

    @Override
    public int getInt(String path) {
        return configuration.getInt(path);
    }

    @Override
    public boolean getBoolean(String path) {
        return configuration.getBoolean(path);
    }

    @Override
    public boolean getBoolean(String path, boolean def) {
        return configuration.getBoolean(path, def);
    }

    @Override
    public boolean contains(String path) {
        return configuration.contains(path);
    }

    @Override
    public Object getObject() {
        return configuration;
    }
}